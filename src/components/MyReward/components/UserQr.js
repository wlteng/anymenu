import React, { useState, useEffect } from 'react';
import { QRCodeSVG } from 'qrcode.react';
import { Scan } from 'lucide-react';
import { LoadingSpinner } from '../../ui/loading';

const UserQR = ({ userId }) => {
  const [qrData, setQrData] = useState(null);
  const [refreshing, setRefreshing] = useState(false);
  const [timeLeft, setTimeLeft] = useState(120); // 2 minutes in seconds

  const generateQRData = () => {
    const timestamp = Date.now();
    // In a real app, this signature would be generated by your backend
    const signature = 'dummy-signature';
    
    return JSON.stringify({
      userId,
      timestamp,
      signature
    });
  };

  const refreshQR = () => {
    setRefreshing(true);
    setQrData(generateQRData());
    setTimeLeft(120); // Reset timer to 2 minutes
    setRefreshing(false);
  };

  // Initial QR generation
  useEffect(() => {
    refreshQR();
  }, [userId]);

  // Auto refresh every 90 seconds (leaving 30 seconds buffer before expiry)
  useEffect(() => {
    const interval = setInterval(refreshQR, 90000);
    return () => clearInterval(interval);
  }, [userId]);

  // Countdown timer
  useEffect(() => {
    const timer = setInterval(() => {
      setTimeLeft((prevTime) => {
        if (prevTime <= 1) {
          refreshQR();
          return 120;
        }
        return prevTime - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  return (
    <div className="bg-white p-6 rounded-xl shadow text-center">
      <div className="mb-4">
        <div className="inline-block p-3 bg-blue-100 rounded-full mb-2">
          <Scan className="w-6 h-6 text-blue-600" />
        </div>
        <h2 className="text-lg font-semibold">Your Reward QR Code</h2>
        <p className="text-sm text-gray-500 mb-4">
          Show this to get your stamps
        </p>
      </div>
      
      <div className="inline-block p-4 bg-white rounded-xl shadow-md relative">
        {refreshing ? (
          <div className="w-[200px] h-[200px] flex items-center justify-center">
            <LoadingSpinner size="w-8 h-8" />
          </div>
        ) : (
          <QRCodeSVG 
            value={qrData || ''}
            size={200}
            level="H"
            includeMargin={true}
          />
        )}
        
        {/* Timer overlay */}
        <div className="absolute bottom-2 left-1/2 -translate-x-1/2 bg-black/75 text-white px-3 py-1 rounded-full text-sm">
          {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}
        </div>
      </div>
      
      <button
        onClick={refreshQR}
        className="mt-4 text-sm text-blue-600 hover:text-blue-700"
      >
        Refresh QR Code
      </button>
    </div>
  );
};

export default UserQR;